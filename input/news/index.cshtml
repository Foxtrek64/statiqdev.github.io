ArchiveSources: "news/posts/*"
ArchiveDestination: >
  => GetInt("Index") <= 1 ? $"news/index.html" : $"news/{GetInt("Index")}.html"
ArchivePageSize: 10
ArchiveOrderKey: Published
ArchiveOrderDescending: true
ArchiveFilter: => GetString("Topic") != "release"
Title: Statiq News
BreadcrumbTitle: News
ArchiveTitle: => GetString("Title")
NoChildPages: true
---
@{
  IDocument webRelease = Outputs.FromPipeline(nameof(ReleaseNotes)).Where(x => x.GetString("Project") == "Statiq.Web").OrderByDescending(x => x.GetDateTime(WebKeys.Published)).First();
  IDocument frameworkRelease = Outputs.FromPipeline(nameof(ReleaseNotes)).Where(x => x.GetString("Project") == "Statiq.Framework").OrderByDescending(x => x.GetDateTime(WebKeys.Published)).First();
}  
<div class="card text-white bg-dark mb-3">
  <div class="card-header">
    Latest Releases
  </div>
  <div class="card-body">
    <div class="row">
      <div class="col-md">
        <div class="card-title mb-0  text-muted small">Web</div>
        <p class="card-text">@Html.DocumentLink(webRelease, webRelease.GetString("Name"), new Dictionary<object, object> { { "class", "text-white" }})</p>
      </div>
      <div class="col-md">
        <div class="card-title mb-0 text-muted small">Docs</div>
        <p class="card-text text-muted">Coming Soon</p>
      </div>
      <div class="col-md mt-3 mt-md-0">
        <div class="card-title mb-0 text-muted small">Framework</div>
        <p class="card-text">@Html.DocumentLink(frameworkRelease, frameworkRelease.GetString("Name"), new Dictionary<object, object> { { "class", "text-white" }})</p>
      </div>
    </div>
  </div>
  <div class="card-footer small">
    @Html.DocumentLink(OutputPages["news/topics/release/index.html"].First(), "View All Release Notes", new Dictionary<object, object> { { "class", "text-white" }})
  </div>
</div>

@Html.Partial("/_posts.cshtml", Document)